[project]
name            = "cairo_utils"
version         = "0.1.0"
description     = "Utils for drawing Inconvergent-esque images"
readme          = "README.md"
requires-python = ">=3.11"
license         = {file = "LICENSE"}
keywords        = ["numpy", "art", "cairo", "inconvergent", "DCEL"]
authors         = [
    {email = "jgrey4296@gmail.com"},
    {name  = "J Grey"}
]
classifiers     = [
    "Programming Language :: Python :: 3.11"
]

dependencies   = [
   "pycairo >= 1.23",
   "imageio >= 2.6",
   "noise >= 1.2.2",
   "numpy >= 1.24",
   "Pillow >= 9.4",
   "scipy >= 1.10"
]

[project.optional-dependencies]
test = [
    "pytest > 7.0.0",
]

##-- urls
[project.urls]
homepage      = "https://github.com/jgrey4296/cairo_utils"
documentation = "https://readthedocs.org/cairo_utils"
repository    = "https://github.com/jgrey4296/cairo_utils"
changelog     = "https://github.com/jgrey4296/cairo_utils/blob/master/CHANGELOG.md"

##-- end urls

##-- scripts
[project.scripts]

[project.gui-scripts]

##-- end scripts

##-- build system
[build-system]
requires = [
         "setuptools >= 63.1.0",
         "wheel >= 0.37.1"
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where      = ["."]
include    = ["cairo_utils"]

[tool.setuptools.package-data]
"*" = ["*"]

[tool.setuptools.exclude-package-data]

##-- end build system

# Tools #######################################################################

##-- pytest
[tool.pytest.ini_options]
log_cli       = false
log_level     = "INFO"
log_cli_level = "WARN"
log_format    = "%(levelname)s %(name)s : %(message)s"

##-- end pytest

##-- pyright
[tool.pyright]
# strict = cairo_utils.*
verboseOutput               = true
typeCheckingMode            = "strict"
pythonVersion               = "3.10"

reportUnusedImport          = false
reportAssertAlwaysTrue      = "information"
reportMissingParameterType  = "warning"
reportMissingTypeArgument   = "warning"
reportMissingTypeStubs      = "warning"
reportUnknownMemberType     = "warning"
reportUnknownParameterType  = "information"
reportUnknownVariableType   = "warning"
reportUnnecessaryCast       = "information"
reportUnnecessaryIsInstance = "warning"

##-- end pyright
